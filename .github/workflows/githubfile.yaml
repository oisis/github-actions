---
name: Test GitHub CI aka Github Actions

on: [push]

env:
  SOURCE_IMAGE_VERSION: 4.22
  IMAGE_VERSION_SUFFIX: oisis

jobs:
  check-build-env:
    runs-on: ubuntu-latest
    steps:
    - name: Lets print OS env - run command in one line
      run: "env | sort"

    - name: Run a multi-line script
      run: |
        #!/bin/bash
        uptime
        whoami

    - name: Get some info about docker
      run: |-
        #!/bin/bash
        docker version
        docker images
        docker ps

    - name: Print GitHub secret
      run: "echo ${{ secrets.SECRET_1 }}"

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out git repository
      uses: actions/checkout@v2

    - name: Update FROM image version from env
      run: sed "s/pgadmin4:VERSION/pgadmin4:$PGADMIN_NEW_IMAGE_VERSION/g" -i Dockerfile

    - name: DEBUG print Dockerfile
      run: cat Dockerfile

    - name: Build example docker image
      run: "docker build -t oisis/pgadmin4:$SOURCE_IMAGE_VERSION-$IMAGE_VERSION_SUFFIX ."
  
  deploy-to-dev:
    runs-on: ubuntu-latest
    environment: dev
    env:
      SECRET_1: ${{ secrets.SECRET_1 }}
    steps:
    - name: Check out git repository
      uses: actions/checkout@v2

    - name: Print GitHub secret SECRET_1 with value secret_1_dev
      run: "echo $env:SECRET_1"

    - name: Generate and validate kubernetes configuration file for dev environment
      run: "kubectl kustomize kustomize/overlays/dev"

  deploy-to-prod:
    runs-on: ubuntu-latest
    environment: prod
    env:
      SECRET_1: ${{ secrets.SECRET_1 }}
    steps:
    - name: Check out git repository
      uses: actions/checkout@v2

    - name: Print GitHub secret SECRET_1 with value secret_1_prod
      run: "echo $env:SECRET_1"

    - name: Generate and validate kubernetes configuration file for prod environment
      run: "kubectl kustomize kustomize/overlays/prod"
